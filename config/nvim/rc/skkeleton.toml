[[plugins]]
repo='https://github.com/vim-skk/skkeleton'
depends='denops.vim'
lua_source='''
vim.api.nvim_create_autocmd('User', {
  pattern = 'DenopsPluginPost:skkeleton',
  callback = function()
    local jisyo_path = function(name)
      local dictdir = vim.fs.joinpath(require('utils').dpp_basePath, 'repos', 'github.com', 'skk-dev', 'dict')
      return vim.fn.expand(vim.fs.joinpath(dictdir, name))
    end

    vim.fn['skkeleton#config'] {
      eggLikeNewline = true,
      globalDictionaries = {
        -- '~/skk/SKK-JISYO.L', -- windowsでうまく読みこめないので、絶対パスで指定
        jisyo_path('SKK-JISYO.L'),
        jisyo_path('SKK-JISYO.hukugougo'),
        jisyo_path('SKK-JISYO.mazegaki'),
        jisyo_path('SKK-JISYO.propernoun'),
        jisyo_path('SKK-JISYO.station'),
      },
    }
    vim.fn['skkeleton#register_kanatable']('rom', {
      [ [[z\<Space>]] ] = { [[\u3000]], '' },
    })
  end,
})
vim.keymap.set({ 'i', 'c', 't' }, '<C-j>', '<Plug>(skkeleton-toggle)')
vim.keymap.set({ 'n' }, '<C-j>', 'i<Plug>(skkeleton-toggle)')
'''

[[plugins]]
repo='https://github.com/NI57721/skkeleton-state-popup'
depends='skkeleton'
hook_add='''
call skkeleton_state_popup#config(#{
  \   labels: {
  \     'input': #{hira: "あ", kata: 'ア', hankata: 'ｶﾅ', zenkaku: 'Ａ'},
  \     'input:okurinasi': #{hira: '▽', kata: '▽', hankata: '▽', abbrev: 'ab'},
  \     'input:okuriari': #{hira: '▽', kata: '▽', hankata: '▽'},
  \     'henkan': #{hira: '▼', kata: '▼', hankata: '▼', abbrev: 'ab'},
  \     'latin': '_A',
  \   },
  \   opts: #{relative: 'cursor', col: 0, row: 1, anchor: 'NW', style: 'minimal'},
  \ })
call skkeleton_state_popup#run()
'''


[[plugins]]
repo='https://github.com/skk-dev/dict'
depends='skkeleton'
if=false
