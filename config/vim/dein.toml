[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

[[plugins]]
repo = 'mattn/ctrlp-matchfuzzy'
depends = 'ctrlp.vim'
hook_source = '''
let g:ctrlp_custom_ignore = {
	\ 'dir':  '\v[\/]\.(git|hg|svn)$',
	\ 'file': '\v\.(exe|so|dll)$',
	\ 'link': 'SOME_BAD_SYMBOLIC_LINKS',
	\ }
'''
hook_add = '''
nnoremap <silent> <C-m> <CMD>CtrlPMRUFiles<CR>
nnoremap <silent> <C-S-l> <CMD>CtrlPLine<CR>
nnoremap <silent> <C-b> <CMD>CtrlPBuffer<CR>
'''

[[plugin]]
repo = 'machakann/vim-sandwich'
on_map = '<Plug>(sandwich-'
hook_add = '''
nnoremap sa  <Plug>(sandwich-add)
nnoremap sd  <Plug>(sandwich-delete)
nnoremap sdb <Plug>(sandwich-delete-auto)
nnoremap sr  <Plug>(sandwich-replace)
nnoremap srb <Plug>(sandwich-replace-auto)
'''
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_source= '''
let g:lsp_settings = {
			\ 'efm-langserver': {
			\   'disabled': 0,
			\   'allowlist': ['markdown'],
			\  }
			\ }
let g:lsp_diagnostics_float_cursor = 1
let g:lsp_diagnostics_enabled = 1
function! s:on_lsp_buffer_enabled() abort
	setlocal completeopt=menu
	setlocal omnifunc=lsp#complete
	if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
	nmap <buffer> gd <Plug>(lsp-definition)
	nmap <buffer> gs <Plug>(lsp-document-symbol-search)
	nmap <buffer> gS <Plug>(lsp-workspace-symbol-search)
	nmap <buffer> gr <Plug>(lsp-references)
	nmap <buffer> gi <Plug>(lsp-implementation)
	nmap <buffer> gt <Plug>(lsp-type-definition)
	nmap <buffer> <leader>rn <Plug>(lsp-rename)
	nmap <buffer> [g <Plug>(lsp-previous-diagnostic)
	nmap <buffer> ]g <Plug>(lsp-next-diagnostic)
	nmap <buffer> K <Plug>(lsp-hover)
endfunction

augroup lsp_install
	au!
	au User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'
depends = 'vim-lsp'

[[plugins]]
repo = 'airblade/vim-gitgutter'
merged = 0

[[plugins]]
repo = 'thinca/vim-fontzoom'
